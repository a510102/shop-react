{"version":3,"sources":["hooks/useInputValue.js","components/CheckOut.js","components/ShopCart/ButtonLayout.js","components/ShopCart/ShopCart.js"],"names":["useInputValue","initialState","useState","state","setState","value","onChange","e","target","CheckOut","alert","useAlert","id","setId","pay","setPay","done","setDone","name","address","tel","orderMessage","email","a","newOrder","user","message","fetch","method","body","JSON","stringify","data","headers","response","json","datas","success","orderId","error","Url","show","div","label","input","className","htmlFor","type","onClick","ButtonLayout","children","styleName","handleBack","ShopCart","history","useHistory","dispatch","useDispatch","carts","useSelector","store","cartsState","coupon","setCoupon","open","setOpen","loading","setLoading","fetchData","then","res","cart","text","code","result","price","final_total","handleUpdate","cartId","productId","qtyN","product","product_id","qty","push","useEffect","Loading","length","map","i","key","title","unit","total","handleDeleCart","event","placeholder","handleCoupon"],"mappings":"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","file":"static/js/10.da8e9159.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport const useInputValue = (initialState) => {\n  const [state, setState] = useState(initialState);\n  const onChange = e => setState(e.target.value);\n\n  return {\n    value: state,\n    onChange,\n  }\n}","import React, { useState } from 'react'\r\nimport { useAlert } from 'react-alert';\r\nimport { useInputValue } from '../hooks/useInputValue';\r\n\r\n\r\nexport default function CheckOut() {\r\n  const alert = useAlert();\r\n\r\n  const [id, setId] = useState(null);\r\n  const [pay, setPay] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n  const { ...name } = useInputValue('');\r\n  const { ...address } = useInputValue('');\r\n  const { ...tel } = useInputValue('');\r\n  const { ...orderMessage } = useInputValue('');\r\n  const { ...email } = useInputValue('');\r\n\r\n  async function AddOrder() {\r\n    const Url = 'https://vue-course-api.hexschool.io/api/jay/order';\r\n    let newOrder = {\r\n      user: {\r\n        name: name.value,\r\n        address: address.value,\r\n        tel: tel.value,\r\n        email: email.value,\r\n      },\r\n      message: orderMessage.value || '無'\r\n    };\r\n    const response = await fetch(Url, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ data: { ...newOrder } }),\r\n      headers: { 'content-type': 'application/json' }\r\n    });\r\n    const datas = await response.json();\r\n    const { success, orderId, message } = datas;\r\n\r\n    if (success) {\r\n      setId(orderId);\r\n      alert.success(message);\r\n      setPay(true);\r\n    } else {\r\n      alert.error(message);\r\n    }\r\n  }\r\n\r\n  async function handlePay() {\r\n    const Url = `https://vue-course-api.hexschool.io/api/jay/pay/${id}`;\r\n    const response = await fetch(Url, { method: 'POST' });\r\n    const datas = await response.json();\r\n    const { success, message } = datas;\r\n\r\n    if (success) {\r\n      alert.show(message);\r\n      setDone(true);\r\n    }\r\n  }\r\n\r\n  const style = {\r\n    div: 'w-full  px-3 mt-3 mb-6 md:mb-0',\r\n    label: 'block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2',\r\n    input: 'appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\" id=\"grid-last-name',\r\n  }\r\n  const { div, label, input } = style;\r\n  return (\r\n    <div className='mt-2 p-2'>\r\n      {!done ? (\r\n        <>\r\n          <h2 className='text-teal-500 text-xl py-1 text-center border border-teal-500 rounded-lg'>客戶資訊</h2>\r\n          <div className='flex flex-wrap  mb-6 text-left '>\r\n            <section className={div}>\r\n              <label className={label} htmlFor='name'>姓名:</label>\r\n              <input\r\n                className={input}\r\n                type='string'\r\n                name='name'\r\n                id='name'\r\n                {...name} />\r\n            </section>\r\n            <section className={div}>\r\n              <label className={label} htmlFor='address'>地址: </label>\r\n              <input\r\n                className={input}\r\n                type='string'\r\n                name='address'\r\n                id='address'\r\n                {...address} />\r\n            </section>\r\n            <section className={div}>\r\n              <label className={label} htmlFor='tel'>電話:</label>\r\n              <input\r\n                className={input}\r\n                type='number'\r\n                name='tel'\r\n                id='tel'\r\n                {...tel} />\r\n            </section>\r\n            <section className={div}>\r\n              <label className={label} htmlFor='email'>E-mail:</label>\r\n              <input\r\n                className={input}\r\n                type='email'\r\n                name='email'\r\n                id='email'\r\n                {...email} />\r\n            </section>\r\n            <section className={div}>\r\n              <label className={label} htmlFor='message'>Message: </label>\r\n              <input\r\n                className={input}\r\n                type='message'\r\n                name='message'\r\n                id='message'\r\n                {...orderMessage} />\r\n            </section>\r\n            <section className='w-full  px-3 mt-3 mb-6 md:mb-0 sm:relative flex justify-end items-end'>\r\n              {\r\n                !pay ? <button onClick={AddOrder} className='bg-teal-500 hover:bg-teal-700 text-white font-bold py-1 px-2 rounded '>完成訂單</button> : <button onClick={handlePay} className='bg-teal-500 hover:bg-teal-700 text-white font-bold py-1 px-2 rounded '>確認結帳</button>\r\n              }\r\n            </section>\r\n          </div>\r\n        </>) : <div className='w-full flex justify-center items-center h-screen text-lg'>購物完成!</div>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react'\n\nexport const ButtonLayout = ({ children, styleName, handleBack }) => {\n  return (\n    <div className={styleName}>\n      {children}\n      <div className='col-span-2'>\n        <button\n          className='bg-blue-400 hover:bg-blue-600 text-white font-bold py-1 px-2 rounded-lg'\n          onClick={handleBack}>返回</button>\n      </div>\n    </div >\n  )\n} ","import React, { useState, useEffect } from 'react';\r\nimport { useAlert } from 'react-alert';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom'\r\nimport CheckOut from '../CheckOut';\r\nimport Loading from '../Loading/Loading';\r\nimport { ButtonLayout } from './ButtonLayout';\r\n\r\nexport default function ShopCart() {\r\n    const alert = useAlert();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const carts = useSelector(store => store.cartsState.carts)\r\n    const [coupon, setCoupon] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchData());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    function fetchData() {\r\n        return dispatch => {\r\n            const Url = 'https://vue-course-api.hexschool.io/api/jay/cart';\r\n            fetch(Url)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    dispatch({ type: \"UPDATE_CART\", cart: data.data })\r\n                    setLoading(false)\r\n                }\r\n                )\r\n        }\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const value = event.target.value;\r\n        setCoupon(value);\r\n    }\r\n\r\n    async function handleCoupon(text) {\r\n        const Url = 'https://vue-course-api.hexschool.io/api/jay/coupon';\r\n        const data = { data: { code: text } }\r\n        const response = await fetch(Url, { method: 'POST', body: JSON.stringify(data), headers: { 'content-type': 'application/json' } });\r\n        const result = await response.json();\r\n        const { success, message } = result;\r\n\r\n        if (success) {\r\n            dispatch({ type: \"UPDATE_PRICE\", price: result.data.final_total });\r\n            alert.success(message);\r\n        } else {\r\n            alert.error(message);\r\n        }\r\n    };\r\n\r\n    function handleCheckOut() {\r\n        setOpen(true);\r\n    }\r\n\r\n    async function handleUpdate(cartId, productId, qtyN) {\r\n        let Url;\r\n        const product = { product_id: productId, qty: qtyN };\r\n        setLoading(true);\r\n        Url = `https://vue-course-api.hexschool.io/api/jay/cart/${cartId}`;\r\n        let response = await fetch(Url, { method: \"DELETE\" });\r\n        let result = await response.json();\r\n        if (result.success && qtyN > 0) {\r\n            Url = 'https://vue-course-api.hexschool.io/api/jay/cart';\r\n            response = await fetch(Url, {\r\n                method: 'POST',\r\n                body: JSON.stringify({ data: { ...product } }),\r\n                headers: { 'content-type': 'application/json' }\r\n            });\r\n            result = await response.json();\r\n            if (result.success) {\r\n                dispatch(fetchData());\r\n                setLoading(false);\r\n                alert.show('更新成功');\r\n            } else {\r\n                setLoading(false);\r\n                alert.error(result.message);\r\n            }\r\n        } else {\r\n            dispatch(fetchData());\r\n            setLoading(false);\r\n            alert.success(result.message)\r\n        }\r\n    }\r\n\r\n    async function handleDeleCart(id) {\r\n        const Url = `https://vue-course-api.hexschool.io/api/jay/cart/${id}`;\r\n        setLoading(true);\r\n        const response = await fetch(Url, { method: \"DELETE\" });\r\n        const result = await response.json();\r\n        const { success, message } = result;\r\n        if (success) {\r\n            dispatch(fetchData());\r\n            setLoading(false);\r\n            alert.success(message);\r\n        } else {\r\n            dispatch(fetchData());\r\n            setLoading(false);\r\n            alert.error(message);\r\n        }\r\n    }\r\n\r\n    function handleBack() {\r\n        history.push('/shop-react/shop')\r\n    }\r\n\r\n    return (\r\n        <div className='my-4 w-full mx-auto p-2 min-h-screen'>\r\n            <h2 className='text-xl p-2 w-full border border-teal-500 text-teal-500 rounded-lg'>您的購物車</h2>\r\n            {\r\n                !loading ? (\r\n                    <div className='w-full text-right'>\r\n                        {\r\n                            !carts.carts.length ? (\r\n                                <ButtonLayout handleBack={handleBack} styleName='w-full'>\r\n                                    <h3 className='text-4xl my-4 text-center'>nothings</h3>\r\n                                </ButtonLayout>\r\n                            ) : (\r\n                                    <ButtonLayout styleName='w-full  grid grid-cols-1 md:grid-cols-2 gap-2 lg:gap-4' handleBack={handleBack}>\r\n                                        <ul className='w-full'>\r\n                                            <li className='p-2 flex border-b-2 items-center justify-around border-gray-600'>\r\n                                                <p>名字</p>\r\n                                                <p>數量</p>\r\n                                                <p>價格</p>\r\n                                                <p>刪除</p>\r\n                                            </li>\r\n                                            {carts.carts.map((cart, i) => {\r\n                                                return (\r\n                                                    <li\r\n                                                        className='ml-auto p-2 flex border-b-2 items-center justify-around border-gray-600'\r\n                                                        key={i}>\r\n                                                        <p>\r\n                                                            {cart.product.title}\r\n                                                        </p>\r\n                                                        <p>\r\n                                                            <span\r\n                                                                className='bg-blue-400 hover:bg-blue-600 text-white font-bold py-1 px-2 rounded-lg mr-1'\r\n                                                                onClick={() => handleUpdate(cart.id, cart.product_id, cart.qty - 1)}>-</span>\r\n                                                            <span>{cart.qty}</span>\r\n                                                            <span\r\n                                                                className='bg-blue-400 hover:bg-blue-600 text-white font-bold py-1 px-2  rounded-lg mx-1'\r\n                                                                onClick={() => handleUpdate(cart.id, cart.product_id, cart.qty + 1)}>+</span>\r\n                                                            <span>{cart.product.unit}</span>\r\n                                                        </p>\r\n                                                        <p className='ml-4'>{cart.total} 元\r\n                                                        </p>\r\n                                                        <button\r\n                                                            className='bg-red-500 hover:bg-red-600 text-white font-bold py-1 px-2 rounded-lg'\r\n                                                            onClick={() => handleDeleCart(cart.id)}>刪除</button>\r\n                                                    </li>\r\n                                                )\r\n                                            })}\r\n                                        </ul>\r\n                                        <div className='w-full'>\r\n                                            <p className='p-2'>共 {carts.carts.length} 件，總共: {carts.final_total} 元</p>\r\n                                            <div className='w-full'>\r\n                                                <input className='p-2 text-indigo-400 border border-teal-400 rounded-md' onChange={handleChange}\r\n                                                    placeholder='輸入優惠卷代碼'\r\n                                                    value={coupon || ''} />\r\n                                                <button\r\n                                                    className='ml-2 bg-indigo-400 hover:bg-indigo-600 text-white font-bold py-1 px-2 rounded-lg'\r\n                                                    onClick={() => handleCoupon(coupon)}>優惠</button>\r\n                                            </div>\r\n                                            {\r\n                                                open ? <CheckOut /> : <button\r\n                                                    className='mt-2 bg-teal-400 hover:bg-teal-600 text-white font-bold py-1 px-2 rounded-lg'\r\n                                                    onClick={handleCheckOut}>前往結帳</button>\r\n                                            }\r\n                                        </div>\r\n                                    </ButtonLayout>\r\n                                )\r\n                        }\r\n                    </div>\r\n                ) : <Loading />\r\n            }\r\n        </div >\r\n    )\r\n}"],"sourceRoot":""}