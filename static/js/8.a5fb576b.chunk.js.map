{"version":3,"sources":["components/CheckOut.js","components/Shop/ShopCart.js"],"names":["CheckOut","alert","useAlert","carts","useContext","ShopCartContext","console","log","useState","user","message","order","setOrder","id","setId","pay","setPay","done","setDone","handleChange","event","target","name","value","preOrder","AddOrder","a","newOrder","fetch","method","body","JSON","stringify","data","headers","response","json","datas","success","orderId","error","handlePay","Url","show","htmlFor","type","onChange","onClick","ShopCart","history","useHistory","dispatch","coupon","setCoupon","open","setOpen","loading","setLoading","fetchData","cart","useEffect","handleDeleCart","result","handleCoupon","text","code","price","final_total","className","length","map","i","key","product","title","qty","unit","total","push"],"mappings":"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","file":"static/js/8.a5fb576b.chunk.js","sourcesContent":["import React, { useState, useContext } from 'react'\r\nimport { useAlert } from 'react-alert';\r\nimport { ShopCartContext } from './Shop/ShopCartContext';\r\n\r\n\r\nexport default function CheckOut() {\r\n  const alert = useAlert();\r\n\r\n  const { carts } = useContext(ShopCartContext);\r\n  console.log(carts)\r\n  const [order, setOrder] = useState({\r\n    user: {},\r\n    message: ''\r\n  });\r\n  const [id, setId] = useState(null);\r\n  const [pay, setPay] = useState(false);\r\n  const [done, setDone] = useState(false);\r\n\r\n  const handleChange = event => {\r\n    const { name, value } = event.target;\r\n    setOrder(preOrder => {\r\n      if (name === 'message') {\r\n        return {\r\n          ...preOrder,\r\n          [name]: value\r\n        }\r\n      } else {\r\n        return {\r\n          ...preOrder,\r\n          user: {\r\n            ...preOrder.user,\r\n            [name]: value\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const AddOrder = async () => {\r\n    const Url = 'https://vue-course-api.hexschool.io/api/jay/order';\r\n    let newOrder;\r\n    if (!order.message) {\r\n      newOrder = {\r\n        ...order,\r\n        message: '無'\r\n      };\r\n    } else {\r\n      newOrder = { ...order };\r\n    }\r\n    const response = await fetch(Url, {\r\n      method: 'POST',\r\n      body: JSON.stringify({ data: { ...newOrder } }),\r\n      headers: { 'content-type': 'application/json' }\r\n    });\r\n    const datas = await response.json();\r\n    const { success, orderId, message } = datas;\r\n\r\n    if (success) {\r\n      setId(orderId);\r\n      alert.success(message);\r\n      setPay(true);\r\n    } else {\r\n      alert.error(message);\r\n    }\r\n  }\r\n\r\n  const handlePay = async () => {\r\n    const Url = `https://vue-course-api.hexschool.io/api/jay/pay/${id}`;\r\n    const response = await fetch(Url, { method: 'POST' });\r\n    const datas = await response.json();\r\n    const { success, message } = datas;\r\n\r\n    if (success) {\r\n      alert.show(message);\r\n      setDone(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {!done ? (<>\r\n        <div>\r\n          <h2>客戶資訊</h2>\r\n          <label htmlFor='name'>姓名:\r\n          <input\r\n              type='string'\r\n              name='name'\r\n              id='id'\r\n              onChange={handleChange} />\r\n          </label>\r\n          <label htmlFor='address'>地址:\r\n          <input\r\n              type='string'\r\n              name='address'\r\n              id='address'\r\n              onChange={handleChange} />\r\n          </label>\r\n          <label htmlFor='tel'>電話:\r\n          <input\r\n              type='number'\r\n              name='tel'\r\n              id='tel'\r\n              onChange={handleChange} />\r\n          </label>\r\n          <label htmlFor='email'>E-mail:\r\n          <input\r\n              type='email'\r\n              name='email'\r\n              id='email'\r\n              onChange={handleChange} />\r\n          </label>\r\n          <label htmlFor='message'>Message:\r\n          <input\r\n              type='message'\r\n              name='message'\r\n              id='message'\r\n              onChange={handleChange} />\r\n          </label>\r\n          {\r\n            !pay ? <button onClick={AddOrder}>完成訂單</button> : <button onClick={handlePay}>確認結帳</button>\r\n          }\r\n        </div>\r\n      </>) : <div>購物完成!</div>\r\n      }\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useAlert } from 'react-alert'\r\nimport { ShopCartContext } from './ShopCartContext';\r\nimport { useHistory } from 'react-router-dom'\r\nimport CheckOut from '../CheckOut';\r\n\r\nimport './shopcart.scss'\r\n\r\n\r\n\r\nexport default function ShopCart() {\r\n    const alert = useAlert();\r\n    const history = useHistory();\r\n\r\n    const { carts, dispatch } = useContext(ShopCartContext);\r\n    const [coupon, setCoupon] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    const fetchData = async () => {\r\n        const Url = 'https://vue-course-api.hexschool.io/api/jay/cart';\r\n        const response = await fetch(Url);\r\n        const datas = await response.json();\r\n        if (datas.success) {\r\n            dispatch({ type: \"UPDATE_CART\", cart: datas.data })\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n    const handleDeleCart = async (id) => {\r\n        const Url = `https://vue-course-api.hexschool.io/api/jay/cart/${id}`;\r\n        const response = await fetch(Url, { method: \"DELETE\" });\r\n        const result = await response.json();\r\n        const { success, message } = result;\r\n        if (success) {\r\n            fetchData();\r\n            alert.success(message)\r\n        }\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const value = event.target.value;\r\n        setCoupon(value);\r\n    }\r\n\r\n    const handleCoupon = async (text) => {\r\n        const Url = 'https://vue-course-api.hexschool.io/api/jay/coupon';\r\n        const data = { data: { code: text } }\r\n        const response = await fetch(Url, { method: 'POST', body: JSON.stringify(data), headers: { 'content-type': 'application/json' } });\r\n        const result = await response.json();\r\n\r\n        const { success, message } = result;\r\n\r\n        if (success) {\r\n            dispatch({ type: \"UPDATE_PRICE\", price: result.data.final_total });\r\n            alert.success(message);\r\n        } else {\r\n            alert.error(message);\r\n        }\r\n    };\r\n\r\n    const handleCheckOut = () => {\r\n        setOpen(true);\r\n    }\r\n\r\n    return (\r\n        <div className='shopcart'>\r\n            {\r\n                !loading && (\r\n                    <ul className='shopcart-itemlist'>\r\n                        {\r\n                            !carts.carts.length ? 'nothings' : (\r\n                                <>\r\n                                    {carts.carts.map((cart, i) => {\r\n                                        return (\r\n                                            <li\r\n                                                className='shopcart-item'\r\n                                                key={i}>\r\n                                                <p>\r\n                                                    <span>{cart.product.title}</span>\r\n                                                    <span>{cart.qty} {cart.product.unit}</span>\r\n                                                    <span>{cart.total} 元</span> </p>\r\n                                                <button onClick={() => handleDeleCart(cart.id)}>刪除</button>\r\n                                            </li>\r\n                                        )\r\n                                    })}\r\n                                    <li className='shopcart-total-price'>總共: {carts.final_total} 元</li>\r\n                                    <li className='shop-coupon'>\r\n                                        <input onChange={handleChange} value={coupon} />\r\n                                        <button\r\n                                            className='coupon-btn'\r\n                                            onClick={() => handleCoupon(coupon)}>優惠</button>\r\n                                    </li>\r\n                                    {\r\n                                        open && <CheckOut />\r\n                                    }\r\n                                    {\r\n                                        !open && <button\r\n                                            className='checkout-btn'\r\n                                            onClick={handleCheckOut}>前往結帳</button>\r\n                                    }\r\n                                </>\r\n                            )\r\n                        }\r\n                        <button\r\n                            className='close-btn'\r\n                            onClick={() => { history.push('/shop') }}>返回</button>\r\n                    </ul>\r\n                )\r\n            }\r\n\r\n        </div >\r\n    )\r\n}"],"sourceRoot":""}