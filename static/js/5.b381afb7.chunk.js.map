{"version":3,"sources":["components/Pages.js","components/Products/EditProduct.js","components/Products/BackProduct.js","components/Products/Products.js"],"names":["Pages","num","setDePage","dePage","useState","pages","setPages","useEffect","newPages","i","push","setPagesArray","className","onClick","length","map","page","key","EditProduct","open","setOpen","product","handleChange","updateProduct","addProduct","handleCancel","setProduct","alert","inputEl","useRef","a","uploadedFile","current","files","formData","FormData","append","fetch","method","body","credentials","response","json","result","success","preProducts","imageUrl","error","message","htmlFor","id","name","value","category","onChange","title","content","description","type","placeholder","ref","style","width","height","src","alt","origin_price","price","unit","hasOwnProperty","BackProduct","updateEnabled","openUpdateProduct","deleteProduct","e","checked","is_enabled","Products","useAlert","products","setProducts","loading","setLoading","fetchProducts","Url","data","pagination","total_pages","updateData","JSON","stringify","headers","item","target","Loading","event","preProduct"],"mappings":"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","file":"static/js/5.b381afb7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n\nexport default function Pages({ num, setDePage, dePage }) {\n  const [pages, setPages] = useState([]);\n\n  useEffect(() => {\n    setPagesArray(num)\n  }, [num])\n\n  function setPagesArray(num) {\n    const newPages = []\n    if (num > 2) {\n      for (let i = 1; i < (num + 1); i++) {\n        newPages.push(i);\n      }\n      setPages(newPages);\n    }\n  }\n\n  const active = 'bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l';\n  const normal = 'bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l'\n  return (\n    <ul className='max-w-sm inline-flex'>\n      {\n        dePage !== 1 && <li><button className='bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l' onClick={() => setDePage(dePage - 1)}>Pre</button> </li>\n      }\n      {\n        pages.length > 1 && (pages.map((page, i) => (\n          <li key={i}>\n            <button className={dePage === page ? active : normal} onClick={() => setDePage(page)}>\n              {page}\n            </button>\n          </li>\n        )))\n      }\n      {\n        dePage !== num && <li> <button className='bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-r' onClick={() => setDePage(dePage + 1)}>Next</button></li>\n      }\n\n    </ul>\n  )\n} ","import React, { useRef } from 'react'\r\n\r\n\r\nexport default function EditProduct({ open, setOpen, product, handleChange, updateProduct, addProduct, handleCancel, setProduct, alert }) {\r\n  const inputEl = useRef(null);\r\n\r\n  async function uploadFild() {\r\n    const uploadedFile = inputEl.current.files[0];\r\n    const formData = new FormData();\r\n    formData.append('file-to-upload', uploadedFile);\r\n    const Url = 'https://vue-course-api.hexschool.io/api/jay/admin/upload';\r\n    const response = await fetch(Url, {\r\n      method: 'POST',\r\n      body: formData,\r\n      credentials: 'include',\r\n    })\r\n    const result = await response.json();\r\n    if (result.success) {\r\n      setProduct(preProducts => {\r\n        return {\r\n          ...preProducts,\r\n          imageUrl: result.imageUrl\r\n        }\r\n      });\r\n      alert.success('上傳成功');\r\n    } else {\r\n      alert.error(result.message);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => { setOpen(!open) }}>建立新商品</button>\r\n      {\r\n        open ? (\r\n          <div>\r\n            <label htmlFor='category'>類別:</label>\r\n            <input\r\n              id='category'\r\n              name='category'\r\n              value={product.category || ''}\r\n              onChange={handleChange} />\r\n            <label htmlFor='title'>商品:</label>\r\n            <input\r\n              id='title'\r\n              name='title'\r\n              value={product.title || ''}\r\n              onChange={handleChange} />\r\n            <label htmlFor='content'>內容:</label>\r\n            <input\r\n              id='content'\r\n              name='content'\r\n              value={product.content || ''}\r\n              onChange={handleChange} />\r\n            <label htmlFor='description'>描述:</label>\r\n            <input\r\n              id='description'\r\n              name='description'\r\n              value={product.description || ''}\r\n              onChange={handleChange} />\r\n            <label htmlFor=\"image\">輸入圖片網址</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={handleChange}\r\n              value={product.imageUrl || ''}\r\n              id=\"image\"\r\n              name='imageUrl'\r\n              placeholder=\"請輸入圖片連結\" />\r\n            <label htmlFor=\"customFile\">或 上傳圖片</label>\r\n            <input type=\"file\" id=\"customFile\" className=\"form-control\"\r\n              ref={inputEl} onChange={uploadFild} />\r\n            {\r\n              product.imageUrl && <img style={{ width: '200px', height: '200px' }} src={product.imageUrl} alt='proPic' />\r\n            }\r\n            <label htmlFor='origin_price'>原價:</label>\r\n            <input\r\n              id='origin_price'\r\n              name='origin_price'\r\n              value={product.origin_price || ''}\r\n              onChange={handleChange} />\r\n            <label htmlFor='price'>特價:</label>\r\n            <input\r\n              id='price'\r\n              name='price'\r\n              value={product.price || ''}\r\n              onChange={handleChange} />\r\n            <label htmlFor='unit'>單位:</label>\r\n            <input\r\n              id='unit'\r\n              name='unit'\r\n              value={product.unit || ''}\r\n              onChange={handleChange} />\r\n            {\r\n              !product.hasOwnProperty('id') ? <button onClick={addProduct}>Add</button> : <button onClick={updateProduct}>Update</button>\r\n            }\r\n            <button onClick={handleCancel}>取消</button>\r\n          </div>\r\n        ) : null\r\n      }\r\n    </>\r\n  )\r\n}","import React from 'react'\r\n\r\nexport default function BackProduct({ product, updateEnabled, openUpdateProduct, deleteProduct }) {\r\n  return (\r\n    <tr>\r\n      <td>{product.title}</td>\r\n      <td>{product.category}</td>\r\n      <td>{product.unit}</td>\r\n      <td>{product.origin_price}元</td>\r\n      <td>{product.price}元</td>\r\n      <td><input\r\n        type=\"checkbox\"\r\n        onChange={(e) => updateEnabled(e, product)}\r\n        checked={product.is_enabled === 1 ? true : false}\r\n      /></td>\r\n      <td><button onClick={() => openUpdateProduct(product)}>編輯</button></td>\r\n      <td> <button onClick={() => deleteProduct(product.id)}>刪除</button></td>\r\n    </tr>\r\n  )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useAlert } from 'react-alert';\r\n\r\nimport EditProduct from './EditProduct';\r\nimport BackProduct from './BackProduct';\r\nimport Loading from '../Loading/Loading';\r\nimport Pages from '../Pages';\r\n\r\nexport default function Products() {\r\n  const alert = useAlert();\r\n\r\n  const [products, setProducts] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [open, setOpen] = useState(false);\r\n  const [product, setProduct] = useState({});\r\n  const [dePage, setDePage] = useState(1);\r\n  const [pages, setPages] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchProducts(dePage);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dePage]);\r\n\r\n  async function fetchProducts(page) {\r\n    const Url = `https://vue-course-api.hexschool.io/api/jay/products?page=${page}`;\r\n    const response = await fetch(Url);\r\n    const data = await response.json();\r\n    if (data.success) {\r\n      setProducts(data.products)\r\n      setLoading(false);\r\n      setPages(data.pagination.total_pages);\r\n    }\r\n\r\n  }\r\n\r\n  async function updateData(data, id, type) {\r\n    let Url;\r\n    if (id) {\r\n      Url = `https://vue-course-api.hexschool.io/api/jay/admin/product/${id}`;\r\n    } else {\r\n      Url = `https://vue-course-api.hexschool.io/api/jay/admin/product`;\r\n    }\r\n\r\n    const response = await fetch(Url, {\r\n      method: type,\r\n      body: (type === 'PUT' || type === 'POST') && JSON.stringify({ data: { ...data } }),\r\n      credentials: 'include',\r\n      headers: { 'content-type': (type === 'PUT' || type === 'POST') && 'application/json' },\r\n    });\r\n    const result = await response.json();\r\n    const { success, message } = result;\r\n    if (success) {\r\n      fetchProducts();\r\n      if (message) {\r\n        alert.success(message);\r\n      }\r\n    } else {\r\n      if (message) {\r\n        alert.error(message)\r\n      }\r\n    }\r\n  }\r\n\r\n  function updateEnabled(e, item) {\r\n    const { checked } = e.target;\r\n    const newproduct = { ...item, is_enabled: checked ? 1 : 0 };\r\n    updateData(newproduct, item.id, 'PUT');\r\n  }\r\n\r\n  function openUpdateProduct(item) {\r\n    setProduct(item);\r\n    if (!open) {\r\n      setOpen(true);\r\n    }\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setProduct(preProduct => {\r\n      return {\r\n        ...preProduct,\r\n        [name]: value\r\n      }\r\n    })\r\n  }\r\n\r\n  function addProduct() {\r\n    updateData(product, null, 'POST');\r\n    setProduct({});\r\n    setOpen(false);\r\n  }\r\n\r\n  function updateProduct() {\r\n    updateData(product, product.id, 'PUT');\r\n    setOpen(false);\r\n  }\r\n\r\n  function deleteProduct(id) {\r\n    updateData(null, id, 'DELETE');\r\n  }\r\n\r\n  function handleCancel() {\r\n    setProduct({});\r\n    setOpen(false);\r\n  }\r\n\r\n  if (loading) {\r\n    return <Loading />\r\n  }\r\n\r\n  return (\r\n    <div className=\"backProducts\">\r\n      <h2>Products</h2>\r\n      <EditProduct\r\n        open={open}\r\n        setOpen={setOpen}\r\n        product={product}\r\n        handleChange={handleChange}\r\n        updateProduct={updateProduct}\r\n        addProduct={addProduct}\r\n        handleCancel={handleCancel}\r\n        setProduct={setProduct}\r\n        alert={alert}\r\n      />\r\n      <table className=\"backProducts-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>產品</th>\r\n            <th>類別</th>\r\n            <th>單位</th>\r\n            <th>原價</th>\r\n            <th>特價</th>\r\n            <th>啟用</th>\r\n            <th>編輯</th>\r\n            <th>刪除</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            products && products.map((product, i) => {\r\n              return <BackProduct\r\n                product={product}\r\n                key={i}\r\n                updateEnabled={updateEnabled}\r\n                openUpdateProduct={openUpdateProduct}\r\n                deleteProduct={deleteProduct} />\r\n            })\r\n          }\r\n        </tbody>\r\n      </table>\r\n      <Pages dePage={dePage} setDePage={setDePage} num={pages} />\r\n    </div>\r\n\r\n  )\r\n}"],"sourceRoot":""}