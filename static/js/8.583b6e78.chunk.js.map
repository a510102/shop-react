{"version":3,"sources":["components/Pages.js","components/Shop/ShopProduct.js","components/Shop/Shop.js"],"names":["Pages","num","setDePage","dePage","useState","pages","setPages","useEffect","newPages","i","push","setPagesArray","className","length","onClick","map","page","key","Product","data","history","useHistory","alert","useAlert","dispatch","useDispatch","id","a","product","product_id","qty","Url","fetch","method","body","JSON","stringify","headers","response","json","result","message","success","show","datas","type","cart","src","imageUrl","alt","category","title","origin_price","price","handleAddToCart","Shop","products","useSelector","store","productsState","loading","setLoading","categ","setCateg","pagination","total_pages","fetchProducts","Loading","items","text","style","filterProducts","filter","is_enabled","categorys","indexOf","item"],"mappings":"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","file":"static/js/8.583b6e78.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n\nexport default function Pages({ num, setDePage, dePage }) {\n  const [pages, setPages] = useState([]);\n\n  useEffect(() => {\n    setPagesArray(num)\n  }, [num])\n\n  function setPagesArray(num) {\n    const newPages = []\n    if (num > 2) {\n      for (let i = 1; i < (num + 1); i++) {\n        newPages.push(i);\n      }\n      setPages(newPages);\n    }\n  }\n\n  const active = 'bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l';\n  const normal = 'bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l'\n  return (\n    <ul className='max-w-sm inline-flex mt-2'>\n      {\n        (pages.length > 1 && dePage !== 1) && <li><button className='bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-l' onClick={() => setDePage(dePage - 1)}>Pre</button> </li>\n      }\n      {\n        pages.length > 1 && (pages.map((page, i) => (\n          <li key={i}>\n            <button className={dePage === page ? active : normal} onClick={() => setDePage(page)}>\n              {page}\n            </button>\n          </li>\n        )))\n      }\n      {\n        (pages.length > 1 && dePage !== num) && <li> <button className='bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-r' onClick={() => setDePage(dePage + 1)}>Next</button></li>\n      }\n\n    </ul>\n  )\n} ","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useAlert } from 'react-alert';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport default function Product({ data }) {\r\n    const history = useHistory();\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    async function handleAddToCart(id) {\r\n        const product = { data: { product_id: id, qty: 1 } };\r\n        let Url = 'https://vue-course-api.hexschool.io/api/jay/cart';\r\n        let response = await fetch(Url, {\r\n            method: \"POST\",\r\n            body: JSON.stringify(product),\r\n            headers: { 'content-type': 'application/json' }\r\n        });\r\n        const result = await response.json();\r\n        const { message, success } = result;\r\n        if (success) {\r\n            alert.show(message);\r\n            Url = 'https://vue-course-api.hexschool.io/api/jay/cart';\r\n            response = await fetch(Url);\r\n            const datas = await response.json();\r\n            if (datas.success) {\r\n                dispatch({ type: \"UPDATE_CART\", cart: datas.data })\r\n            }\r\n        }\r\n    }\r\n\r\n    function handlePathToProduct(id) {\r\n        history.push(`/shop-react/shop/${id}`)\r\n    }\r\n\r\n    return (\r\n        <li id={data.id} className=\"mb-1 rounded overflow-hidden shadow-lg  rounded-lg shadow-md relative h-auto\">\r\n            <img src={data.imageUrl} alt=\"product\" className='w-full h-56 rounded rounded-b-none' />\r\n            <div className='px-5 py-2  inset-x-0 bottom-0 bg-gray-100 w-full  rounded'>\r\n                <h3 className=' flex justify-between text-teal-700 font-bold text-sm mb-2'>\r\n                    <span>{data.category} :</span>\r\n                    <span>{data.title}</span>\r\n                </h3>\r\n                <p className='flex justify-between text-teal-700 text-base'>\r\n                    <span>原價: {data.origin_price}元</span>\r\n                    <span>{data.price && `特價: ${data.price}元 `}</span>\r\n                </p>\r\n                <div className='flex items-center justify-between mt-2'>\r\n                    <button onClick={() => handleAddToCart(data.id)} className=\"bg-green-400 hover:bg-green-600 text-white font-bold py-1 px-2 rounded-full\">ADD</button>\r\n                    <button onClick={() => handlePathToProduct(data.id)} className=\"bg-blue-400 hover:bg-blue-600 text-white font-bold py-1 px-2 rounded-full\">詳細內容</button>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport ShopProduct from './ShopProduct';\r\nimport Loading from '../Loading/Loading';\r\nimport Pages from '../Pages';\r\n\r\nexport default function Shop() {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector(store => store.productsState.products);\r\n    const [loading, setLoading] = useState(true);\r\n    const [dePage, setDePage] = useState(1)\r\n    const [pages, setPages] = useState(null)\r\n    const [categ, setCateg] = useState('all');\r\n\r\n    useEffect(() => {\r\n        fetchProducts(dePage);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [dePage])\r\n\r\n    async function fetchProducts(page) {\r\n        const Url = `https://vue-course-api.hexschool.io/api/jay/products?page=${page}`;\r\n        const response = await fetch(Url);\r\n        const datas = await response.json();\r\n        const { success, products, pagination } = datas;\r\n        if (success) {\r\n            dispatch({ type: \"UPDATE_PRODUCT\", product: products });\r\n            setLoading(false);\r\n            setPages(pagination.total_pages)\r\n        }\r\n    }\r\n\r\n    function handleCategory(items, text) {\r\n        if (text === 'all') {\r\n            return items\r\n        } else {\r\n            return items.filter(item => item.category === text)\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loading />\r\n    }\r\n\r\n    if (!products) {\r\n        return <div> error 404</div>\r\n    }\r\n\r\n    const style = {\r\n        active: 'm-2 bg-white w-16 text-teal-600 text-white font-bold py-1 px-2 rounded-full',\r\n        normal: 'm-2 bg-teal-500 w-16 hover:bg-teal-600 text-white font-bold py-1 px-2 rounded-full',\r\n    }\r\n    const filterProducts = products.filter(data => data.is_enabled === 1);\r\n    const categorys = products.map(product => product.category).filter((product, i, a) => a.indexOf(product) === i);\r\n    return (\r\n        <div className='container mx-auto h-auto min-h-screen'>\r\n            <div>\r\n                <button\r\n                    onClick={() => setCateg('all')}\r\n                    className={categ === 'all' ? style.active : style.normal}>全部</button>\r\n                {categorys && categorys.map((category, i) =>\r\n                    <button\r\n                        onClick={() => setCateg(category)}\r\n                        key={i}\r\n                        className={categ === category ? style.active : style.normal}>{category}</button>\r\n                )}\r\n            </div>\r\n            <ul className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2 lg:gap-4\">\r\n                {\r\n                    filterProducts.length > 0 ? handleCategory(filterProducts, categ).map(data =>\r\n                        <ShopProduct data={data} key={data.id} />\r\n                    ) : (\r\n                            <div>現在還沒有商品喲~</div>)\r\n                }\r\n                <Pages dePage={dePage} setDePage={setDePage} num={pages} />\r\n            </ul>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}