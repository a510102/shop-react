{"version":3,"sources":["components/Shop/ProductSelf.js"],"names":["ProductSelf","id","useParams","history","useHistory","alert","useAlert","dispatch","useContext","ShopCartContext","useState","product","setProduct","qty","setQty","a","product_id","Url","fetch","method","body","JSON","stringify","data","headers","response","json","result","success","message","datas","type","cart","error","useEffect","fetchProduct","title","category","content","origin_price","price","description","unit","className","onChange","event","value","target","map","item","key","onClick","addProductToCart","push"],"mappings":"2PAMe,SAASA,IAAe,IAC7BC,EAAOC,cAAPD,GACFE,EAAUC,cACVC,EAAQC,cACNC,EAAaC,qBAAWC,KAAxBF,SAJ4B,EAKNG,mBAAS,MALH,mBAK7BC,EAL6B,KAKpBC,EALoB,OAMdF,mBAAS,GANK,mBAM7BG,EAN6B,KAMxBC,EANwB,iDAapC,WAAgCb,EAAIY,GAApC,2BAAAE,EAAA,6DACQJ,EAAU,CAAEK,WAAYf,EAAIY,OAC9BI,EAAM,mDAFZ,SAGuBC,MAAMD,EAAK,CAC9BE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,KAAK,eAAMZ,KAClCa,QAAS,CAAE,eAAgB,sBAN/B,cAGMC,EAHN,gBAQuBA,EAASC,OARhC,UAQQC,EARR,OASUC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,SACbD,EAVN,wBAWIvB,EAAMuB,QAAQC,GACdZ,EAAM,mDAZV,UAaqBC,MAAMD,GAb3B,eAaIQ,EAbJ,iBAcwBA,EAASC,OAdjC,SAcUI,EAdV,QAecF,SACRrB,EAAS,CAAEwB,KAAM,cAAeC,KAAMF,EAAMP,OAhBlD,wBAmBIlB,EAAM4B,MAAMJ,GAnBhB,6CAboC,kEAqCpC,gCAAAd,EAAA,6DACQE,EADR,8DACqEhB,GADrE,SAEyBiB,MAAMD,GAF/B,cAEQQ,EAFR,gBAGuBA,EAASC,OAHhC,QAGQC,EAHR,QAIaC,SACThB,EAAWe,EAAOhB,SALtB,4CArCoC,sBAmDpC,GA3CAuB,qBAAU,YAR0B,mCASlCC,KAEC,IAwCCxB,EAAS,CAAC,IACJyB,EAAqEzB,EAArEyB,MAAOC,EAA8D1B,EAA9D0B,SAAUC,EAAoD3B,EAApD2B,QAASC,EAA2C5B,EAA3C4B,aAAcC,EAA6B7B,EAA7B6B,MAAOC,EAAsB9B,EAAtB8B,YAAaC,EAAS/B,EAAT+B,KACpE,OACE,wBAAIC,UAAU,eACZ,4BAAI,4CAAQP,IACZ,4BAAI,4CAAQC,IACZ,4BAAI,2CAAOC,IACX,4BAAI,2CAAOG,IACX,4BAAI,2CAAOF,EAAP,IAAsBG,IACzBF,GAAS,4BAAI,2CAAOA,EAAP,IAAeE,IAC7B,4BAAQE,SAfd,SAAsBC,GAAQ,IACpBC,EAAUD,EAAME,OAAhBD,MACRhC,EAAOgC,IAa6BA,MAAOjC,GACpC,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAImC,KAAI,SAAAC,GAAI,OACvC,4BAAQC,IAAKD,EAAMH,MAAOG,GAAOA,OAGrC,4BAAQE,QAAS,kBAlEa,6CAkEPC,CAAiBnD,EAAIY,KAA5C,kCACA,4BAAQsC,QAAS,WAAQhD,EAAQkD,KAAK,WAAtC,iBAKN,OAAO,kBAAC,IAAD","file":"static/js/13.1857f473.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useAlert } from 'react-alert';\nimport { ShopCartContext } from '../../contexts/shopCartContext/ShopCartContext';\nimport Loading from '../Loading/Loading';\n\nexport default function ProductSelf() {\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n  const { dispatch } = useContext(ShopCartContext);\n  const [product, setProduct] = useState(null);\n  const [qty, setQty] = useState(1);\n\n  useEffect(() => {\n    fetchProduct();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  async function addProductToCart(id, qty) {\n    const product = { product_id: id, qty }\n    let Url = 'https://vue-course-api.hexschool.io/api/jay/cart';\n    let response = await fetch(Url, {\n      method: 'POST',\n      body: JSON.stringify({ data: { ...product } }),\n      headers: { 'content-type': 'application/json' }\n    });\n    const result = await response.json();\n    const { success, message } = result;\n    if (success) {\n      alert.success(message)\n      Url = 'https://vue-course-api.hexschool.io/api/jay/cart';\n      response = await fetch(Url);\n      const datas = await response.json();\n      if (datas.success) {\n        dispatch({ type: \"UPDATE_CART\", cart: datas.data })\n      }\n    } else {\n      alert.error(message)\n    }\n\n  }\n\n  async function fetchProduct() {\n    const Url = `https://vue-course-api.hexschool.io/api/jay/product/${id}`;\n    const response = await fetch(Url);\n    const result = await response.json();\n    if (result.success) {\n      setProduct(result.product);\n    }\n  }\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setQty(value);\n  }\n\n  if (product) {\n    const { title, category, content, origin_price, price, description, unit } = product;\n    return (\n      <ul className='productself'>\n        <li><h2>名稱:{title}</h2></li>\n        <li><p>種類: {category}</p></li>\n        <li><p>內容:{content}</p></li>\n        <li><p>描述:{description}</p></li>\n        <li><p>原價:{origin_price} {unit}</p></li>\n        {price && <li><p>特價:{price} {unit}</p></li>}\n        <select onChange={handleChange} value={qty}>\n          {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(item => (\n            <option key={item} value={item}>{item}</option>\n          ))}\n        </select>\n        <button onClick={() => addProductToCart(id, qty)}>加入購物車</button>\n        <button onClick={() => { history.push('/shop') }}>返回</button>\n      </ul>\n    )\n  }\n\n  return <Loading />\n\n}"],"sourceRoot":""}