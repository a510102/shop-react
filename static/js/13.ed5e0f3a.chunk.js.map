{"version":3,"sources":["components/Shop/ProductSelf.js"],"names":["ProductSelf","id","useParams","history","useHistory","alert","useAlert","dispatch","useContext","ShopContext","useState","product","setProduct","qty","setQty","a","product_id","Url","fetch","method","body","JSON","stringify","data","headers","response","json","result","success","message","datas","type","cart","error","useEffect","fetchProduct","title","category","content","origin_price","price","description","unit","imageUrl","className","src","alt","htmlFor","onChange","event","value","target","map","item","key","onClick","addProductToCart","push"],"mappings":"2PAMe,SAASA,IAAe,IAC7BC,EAAOC,cAAPD,GACFE,EAAUC,cACVC,EAAQC,cACNC,EAAaC,qBAAWC,KAAxBF,SAJ4B,EAKNG,mBAAS,MALH,mBAK7BC,EAL6B,KAKpBC,EALoB,OAMdF,mBAAS,GANK,mBAM7BG,EAN6B,KAMxBC,EANwB,iDAapC,WAAgCb,EAAIY,GAApC,2BAAAE,EAAA,6DACQJ,EAAU,CAAEK,WAAYf,EAAIY,OAC9BI,EAAM,mDAFZ,SAGuBC,MAAMD,EAAK,CAC9BE,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEC,KAAK,eAAMZ,KAClCa,QAAS,CAAE,eAAgB,sBAN/B,cAGMC,EAHN,gBAQuBA,EAASC,OARhC,UAQQC,EARR,OASUC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,SACbD,EAVN,wBAWIvB,EAAMuB,QAAQC,GACdZ,EAAM,mDAZV,UAaqBC,MAAMD,GAb3B,eAaIQ,EAbJ,iBAcwBA,EAASC,OAdjC,SAcUI,EAdV,QAecF,SACRrB,EAAS,CAAEwB,KAAM,cAAeC,KAAMF,EAAMP,OAhBlD,wBAmBIlB,EAAM4B,MAAMJ,GAnBhB,6CAboC,kEAqCpC,gCAAAd,EAAA,6DACQE,EADR,8DACqEhB,GADrE,SAEyBiB,MAAMD,GAF/B,cAEQQ,EAFR,gBAGuBA,EAASC,OAHhC,QAGQC,EAHR,QAIaC,SACThB,EAAWe,EAAOhB,SALtB,4CArCoC,sBAmDpC,GA3CAuB,qBAAU,YAR0B,mCASlCC,KAEC,IAwCCxB,EAAS,CAAC,IACJyB,EAA+EzB,EAA/EyB,MAAOC,EAAwE1B,EAAxE0B,SAAUC,EAA8D3B,EAA9D2B,QAASC,EAAqD5B,EAArD4B,aAAcC,EAAuC7B,EAAvC6B,MAAOC,EAAgC9B,EAAhC8B,YAAaC,EAAmB/B,EAAnB+B,KAAMC,EAAahC,EAAbgC,SAC1E,OACE,yBAAKC,UAAU,2BACb,yBAAKA,UAAU,6HAA6HC,IAAKF,EAAUG,IAAI,kBAC/J,yBAAKF,UAAU,4CACb,yBAAKA,UAAU,gCACb,wBAAIA,UAAU,6BAA6BP,EAA3C,KAAuDD,GACvD,uBAAGQ,UAAU,4BAAb,iBACA,uBAAGA,UAAU,SAASN,GACtB,uBAAGM,UAAU,6BAAb,iBACA,uBAAGA,UAAU,QAAQH,GACrB,uBAAGG,UAAU,SAAb,gBAAyBL,EAAzB,YAA2CG,GAC1CF,GAAS,uBAAGI,UAAU,SAAb,gBAAyBJ,EAAzB,aAAqCE,IAEjD,yBAAKE,UAAU,gCACb,yBAAKA,UAAU,YACb,2BAAOA,UAAU,4DAA4DG,QAAQ,OAArF,6BAGA,4BACE9C,GAAG,MACH2C,UAAU,6KACVI,SA5Bd,SAAsBC,GAAQ,IACpBC,EAAUD,EAAME,OAAhBD,MACRpC,EAAOoC,IA2BKA,MAAOrC,GACN,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAIuC,KAAI,SAAAC,GAAI,OACvC,4BAAQC,IAAKD,EAAMH,MAAOG,GAAOA,QAIvC,yBAAKT,UAAU,8BACb,4BACEA,UAAU,uEACVW,QAAS,kBApFa,6CAoFPC,CAAiBvD,EAAIY,KAFtC,kCAGA,4BACE+B,UAAU,uEACVW,QAAS,WAAQpD,EAAQsD,KAAK,sBAFhC,oBAUZ,OAAO,kBAAC,IAAD","file":"static/js/13.ed5e0f3a.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useAlert } from 'react-alert';\nimport { ShopContext } from '../../contexts/shopCartContext/ShopCartContext';\nimport Loading from '../Loading/Loading';\n\nexport default function ProductSelf() {\n  const { id } = useParams();\n  const history = useHistory();\n  const alert = useAlert();\n  const { dispatch } = useContext(ShopContext);\n  const [product, setProduct] = useState(null);\n  const [qty, setQty] = useState(1);\n\n  useEffect(() => {\n    fetchProduct();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  async function addProductToCart(id, qty) {\n    const product = { product_id: id, qty }\n    let Url = 'https://vue-course-api.hexschool.io/api/jay/cart';\n    let response = await fetch(Url, {\n      method: 'POST',\n      body: JSON.stringify({ data: { ...product } }),\n      headers: { 'content-type': 'application/json' }\n    });\n    const result = await response.json();\n    const { success, message } = result;\n    if (success) {\n      alert.success(message)\n      Url = 'https://vue-course-api.hexschool.io/api/jay/cart';\n      response = await fetch(Url);\n      const datas = await response.json();\n      if (datas.success) {\n        dispatch({ type: \"UPDATE_CART\", cart: datas.data })\n      }\n    } else {\n      alert.error(message)\n    }\n\n  }\n\n  async function fetchProduct() {\n    const Url = `https://vue-course-api.hexschool.io/api/jay/product/${id}`;\n    const response = await fetch(Url);\n    const result = await response.json();\n    if (result.success) {\n      setProduct(result.product);\n    }\n  }\n\n  function handleChange(event) {\n    const { value } = event.target;\n    setQty(value);\n  }\n\n  if (product) {\n    const { title, category, content, origin_price, price, description, unit, imageUrl } = product;\n    return (\n      <div className='container w-ful sm:flex'>\n        <img className='lg:h-auto w-full sm:w-1/2 md:w-1/3 flex-none bg-cover rounded-t lg:rounded-t-none lg:rounded-l text-center overflow-hidden' src={imageUrl} alt='product-image' />\n        <div className='w-full sm:w-1/2 md:w-2/3 md:flex sm:ml-2'>\n          <div className='w-full lg:w-1/2 mb-6 md:mb-0'>\n            <h2 className='text-3xl font-medium mb-3'>{category}: {title}</h2>\n            <p className='text-xl font-medium mb-1'>內容:</p>\n            <p className=' mb-3'>{content}</p>\n            <p className=' mb-1 text-xl font-medium'>描述:</p>\n            <p className='mb-3'>{description}</p>\n            <p className=' mb-3'>原價:{origin_price}元 / {unit}</p>\n            {price && <p className=' mb-3'>特價:{price} 元 / {unit}</p>}\n          </div>\n          <div className=\"w-full lg:w-1/2 mb-6 md:mb-0\">\n            <div className='relative'>\n              <label className=\"block  tracking-wide text-gray-700 text-sm font-bold mb-2\" htmlFor=\"qty\">\n                選擇數量:\n              </label>\n              <select\n                id='qty'\n                className='block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500'\n                onChange={handleChange}\n                value={qty}>\n                {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(item => (\n                  <option key={item} value={item}>{item}</option>\n                ))}\n              </select>\n            </div>\n            <div className='mt-2 flex justify-between '>\n              <button\n                className='bg-teal-500 hover:bg-teal-700 text-white font-bold py-1 px-2 rounded'\n                onClick={() => addProductToCart(id, qty)}>加入購物車</button>\n              <button\n                className='bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded'\n                onClick={() => { history.push('/shop-react/shop') }}>返回</button>\n            </div>\n          </div>\n        </div>\n      </div >\n    )\n  }\n\n  return <Loading />\n\n}"],"sourceRoot":""}